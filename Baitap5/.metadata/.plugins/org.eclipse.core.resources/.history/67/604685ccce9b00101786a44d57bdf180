package com.littlelotus.media.controller;

import com.littlelotus.media.dto.SessionUser;
import com.littlelotus.media.dto.forms.CommentForm;
import com.littlelotus.media.dto.forms.PostForm;
import com.littlelotus.media.entity.Post;
import com.littlelotus.media.service.CommentService;
import com.littlelotus.media.service.PostService;
import jakarta.servlet.http.HttpSession;
import jakarta.validation.Valid;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.*;

@Controller
@RequestMapping("/post")
public class PostController 
{
    private final PostService postService;
    private final CommentService commentService;

    @Autowired
    public PostController(PostService postService, 
    		CommentService commentService) 
    {
        this.postService = postService;
        this.commentService = commentService;
    }

    @GetMapping("/new")
    public String newPost(PostForm postForm, HttpSession session, Model model) 
    {
        model.addAttribute("sessionUser", (SessionUser) session.getAttribute("sessionUser"));
        return "newpost";
    }

    @PostMapping
    public String createPost(@Valid PostForm postForm, 
    		BindingResult br, HttpSession session, Model model) 
    {
    	
        SessionUser su = (SessionUser) session.getAttribute("sessionUser");
        if (su == null) return "redirect:/login";

        if (br.hasErrors()) 
        {
            model.addAttribute("sessionUser", su);
            return "newpost";
        }
        postService.createPost(su.getUsername(), postForm);
        return "redirect:/";
    }

    @GetMapping("/{id}")
    public String viewPost(@PathVariable Long id, Model model, HttpSession session) 
    {
        model.addAttribute("sessionUser", (SessionUser) session.getAttribute("sessionUser"));
        Post post = postService.findById(id);
        model.addAttribute("post", post);
        model.addAttribute("commentForm", new CommentForm());
        return "post";
    }

    @PostMapping("/{id}/comment")
    public String comment(@PathVariable Long id, @Valid CommentForm commentForm, BindingResult br, HttpSession session, Model model) 
    {
        SessionUser su = (SessionUser) session.getAttribute("sessionUser");
        if (su == null) return "redirect:/login";
        if (br.hasErrors()) return "redirect:/post/" + id;

        commentService.addComment(id, su.getId(), commentForm);
        return "redirect:/post/" + id;
    }
}