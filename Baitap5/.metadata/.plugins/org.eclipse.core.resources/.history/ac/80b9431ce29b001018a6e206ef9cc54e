package com.littlelotus.media.service;

import com.littlelotus.media.entity.User;
import com.littlelotus.media.dto.forms.RegisterForm;
import com.littlelotus.media.repository.UserRepository;
import lombok.RequiredArgsConstructor;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.security.core.userdetails.UsernameNotFoundException;
import org.springframework.stereotype.Service;


@Service
@RequiredArgsConstructor
public class UserService implements UserDetailsService 
{

    private final UserRepository userRepository;

    public User register(RegisterForm form) 
    {
        User user = User.builder()
                .username(form.getUsername())
                .password(form.getPassword())
                .email(form.getEmail())
                .displayName(form.getDisplayName())
                .avatarUrl(form.getAvatarUrl())
                .build();
        return userRepository.save(user);
    }

    public User login(String username, String password) {
        return userRepository.findByUsernameAndPassword(username, password).orElse(null);
    }

    public User findByUsername(String username) {
        return userRepository.findByUsername(username).orElse(null);
    }

    @Override
    public UserDetails loadUserByUsername(String username) throws UsernameNotFoundException {
        User user = findByUsername(username);
        if (user == null) throw new UsernameNotFoundException("User not found");
        return org.springframework.security.core.userdetails.User.withUsername(user.getUsername())
                .password(user.getPassword())
                .roles("USER")
                .build();
    }
}
