package com.littlelotus.controller;

import com.littlelotus.entity.User;
import com.littlelotus.service.UserService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

@Controller
@RequestMapping("/admin/users")
public class AdminUserController {

    @Autowired
    private UserService userService;

    // 1. Hiển thị Danh sách Users
    @GetMapping
    public String listUsers(Model model) {
        model.addAttribute("users", userService.findAll());
        return "admin/users/list";
    }

    // 2. hien thi form them user
    @GetMapping("/new")
    public String showNewForm(Model model) {
        model.addAttribute("user", new User());
        model.addAttribute("pageTitle", "Thêm User Mới");
        return "admin/users/form";
    }

    // 3. xu ly them.sua user
    @PostMapping("/save")
    public String saveUser(User user, RedirectAttributes ra) {
        // Lưu ý: Trong ứng dụng thực tế, bạn cần mã hóa mật khẩu ở đây
        userService.save(user);
        ra.addFlashAttribute("message", "User đã được lưu thành công!");
        return "redirect:/admin/users";
    }

    // 4. hien thi form sua user
    @GetMapping("/edit/{id}")
    public String showEditForm(@PathVariable("id") Long id, Model model, RedirectAttributes ra) {
        try {
            User user = userService.findById(id)
                                 .orElseThrow(() -> new RuntimeException("User not found"));
            model.addAttribute("user", user);
            model.addAttribute("pageTitle", "Sửa User (ID: " + id + ")");
            return "admin/users/form";
        } catch (RuntimeException e) {
            ra.addFlashAttribute("message", e.getMessage());
            return "redirect:/admin/users";
        }
    }

    // 5.Xoa User
    @GetMapping("/delete/{id}")
    public String deleteUser(@PathVariable("id") Long id, RedirectAttributes ra) {
        try {
            userService.deleteById(id);
            ra.addFlashAttribute("message", "User ID " + id + " đã được xóa thành công.");
        } catch (Exception e) {
            ra.addFlashAttribute("message", "Không thể xóa User ID " + id + ".");
        }
        return "redirect:/admin/users";
    }
}